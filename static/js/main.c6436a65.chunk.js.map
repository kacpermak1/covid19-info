{"version":3,"sources":["Components/Poland.js","Components/GB.js","Components/States.js","Components/Italy.js","Components/Stats.js","Components/Actions/index.js","App.js","serviceWorker.js","Components/Reducers/deathsReducer.js","Components/Reducers/confirmedReducer.js","Components/Reducers/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","width","margin","borderRadius","media","height","paddingTop","border","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","connect","state","deaths","deathsReducer","cases","confirmedReducer","confirmed","props","classes","className","Card","CardHeader","action","IconButton","aria-label","title","subheader","CardMedia","image","CardContent","Typography","color","component","style","fontWeight","britain","states","italy","axios","require","Stats","britainCases","globalDeaths","globalCases","statesDeaths","statesCases","italyDeaths","italyCases","fetchData","countryCode","stateDeathsName","stateCasesName","get","then","response","setState","data","value","catch","error","console","log","this","prevProps","prevState","loadDeaths","loadConfirmed","loadBritainDeaths","loadBritainConfirmed","loadGlobalDeaths","loadGlobalConfirmed","loadStatesDeaths","loadStatesConfirmed","loadItalyDeaths","loadItalyConfirmed","display","flexDirection","flexWrap","alignItems","justifyContent","align","variant","marginBottom","spacing","Component","dispatch","type","payload","App","Boolean","window","location","hostname","match","initState","usa","global","reducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c6436a65.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    width:300,\n    margin:15,\n    borderRadius:5\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    border: '1px solid #d3d3d3'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst Poland = (props) => {\n  const classes = useStyles();\n\n  return (\n      <div className=\"card-div\">\n    <Card className={classes.root}>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\">\n          </IconButton>\n        }\n        title=\"Poland\"\n        subheader=''\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"./assets/poland.jpg\"\n        title=\"Poland\"\n      />\n      <CardContent>\n        <Typography color=\"textPrimary\" component=\"h2\">\n          Confirmed cases: <span style={{fontWeight:\"600\"}}>{props.cases? props.cases : ''}</span>\n        </Typography>\n        <Typography color=\"textPrimary\" component=\"h2\">\n          Deaths: <span style={{fontWeight:\"600\"}}>{props.deaths ? props.deaths: '' }</span>\n        </Typography>\n      </CardContent>\n    </Card>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        deaths: state.deathsReducer.deaths,\n        cases: state.confirmedReducer.confirmed,\n    }\n}\n\nexport default connect(mapStateToProps, {})(Poland);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    width:300,\n    margin:15,\n    borderRadius:5\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    border: '1px solid #d3d3d3'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst GB = (props) => {\n  const classes = useStyles();\n\n  return (\n      <div className=\"card-div\">\n    <Card className={classes.root}>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\">\n          </IconButton>\n        }\n        title=\"United Kingdom\"\n        subheader=''\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"./assets/gb.jpg\"\n        title=\"United Kingdom\"\n      />\n      <CardContent>\n        <Typography color=\"textPrimary\" component=\"h2\">\n          Confirmed cases: <span style={{fontWeight:\"600\"}}>{props.cases ? props.cases : ''}</span> \n        </Typography>\n        <Typography color=\"textPrimary\" component=\"h2\">\n          Deaths: <span style={{fontWeight:\"600\"}}>{props.britain ? props.britain : '' }</span> \n        </Typography>\n      </CardContent>\n    </Card>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        britain: state.deathsReducer.britain,\n        cases: state.confirmedReducer.britain,\n    }\n}\n\nexport default connect(mapStateToProps, {})(GB);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    width:300,\n    margin:15,\n    borderRadius:5\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    border: '1px solid #d3d3d3'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst States = (props) => {\n  const classes = useStyles();\n\n  return (\n      <div className=\"card-div\">\n    <Card className={classes.root}>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\">\n          </IconButton>\n        }\n        title=\"United States\"\n        subheader=''\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"./assets/states.jpg\"\n        title=\"United States\"\n      />\n      <CardContent>\n        <Typography color=\"textPrimary\" component=\"h2\">\n          Confirmed cases: <span style={{fontWeight:\"600\"}}>{props.cases ? props.cases : ''}</span>\n        </Typography>\n        <Typography color=\"textPrimary\" component=\"h2\">\n          Deaths: <span style={{fontWeight:\"600\"}}>{props.deaths ? props.deaths : ''}</span>\n        </Typography>\n      </CardContent>\n    </Card>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        deaths: state.deathsReducer.states,\n        cases: state.confirmedReducer.states,\n    }\n}\n\nexport default connect(mapStateToProps, {})(States);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    width:300,\n    margin:15,\n    borderRadius:5\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    border: '1px solid #d3d3d3'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst Italy = (props) => {\n  const classes = useStyles();\n\n  return (\n      <div className=\"card-div\">\n    <Card className={classes.root}>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\">\n          </IconButton>\n        }\n        title=\"Italy\"\n        subheader=''\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"./assets/italy.jpg\"\n        title=\"Italy\"\n      />\n      <CardContent>\n        <Typography color=\"textPrimary\" component=\"h2\">\n          Confirmed cases: <span style={{fontWeight:\"600\"}}>{props.cases ? props.cases : ''}</span>\n        </Typography>\n        <Typography color=\"textPrimary\" component=\"h2\">\n          Deaths: <span style={{fontWeight:\"600\"}}>{props.deaths ? props.deaths : ''}</span>\n        </Typography>\n      </CardContent>\n    </Card>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        deaths: state.deathsReducer.italy,\n        cases: state.confirmedReducer.italy,\n    }\n}\n\nexport default connect(mapStateToProps, {})(Italy);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Poland from \"./Poland\";\nimport GB from \"./GB\";\nimport States from \"./States\";\nimport Italy from \"./Italy\";\nimport {\n  loadDeaths,\n  loadConfirmed,\n  loadBritainDeaths,\n  loadBritainConfirmed,\n  loadGlobalDeaths,\n  loadGlobalConfirmed,\n  loadStatesDeaths,\n  loadStatesConfirmed,\n  loadItalyDeaths,\n  loadItalyConfirmed\n} from \"./Actions\";\nconst axios = require(\"axios\");\n\nclass Stats extends Component {\n  state = {\n    deaths: 0,\n    cases: 0,\n    britain: 0,\n    britainCases: 0,\n    globalDeaths: 0,\n    globalCases: 0,\n    statesDeaths: 0,\n    statesCases: 0,\n    italyDeaths: 0,\n    italyCases: 0\n  };\n\n  componentDidMount() {\n    this.fetchData(\"\", \"globalDeaths\", \"globalCases\");\n    this.fetchData(\"countries/PL\", \"deaths\", \"cases\");\n    this.fetchData(\"countries/GB\", \"britain\", \"britainCases\");\n    this.fetchData(\"countries/US\", \"statesDeaths\", \"statesCases\");\n    this.fetchData(\"countries/IT\", \"italyDeaths\", \"italyCases\");\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.deaths !== this.state.deaths) {\n      this.props.loadDeaths(this.state.deaths);\n      this.props.loadConfirmed(this.state.cases);\n    }\n    if (prevState.britain !== this.state.britain) {\n      this.props.loadBritainDeaths(this.state.britain);\n      this.props.loadBritainConfirmed(this.state.britainCases);\n    }\n    if (prevState.globalDeaths !== this.state.globalDeaths) {\n      this.props.loadGlobalDeaths(this.state.globalDeaths);\n      this.props.loadGlobalConfirmed(this.state.globalCases);\n    }\n    if (prevState.statesDeaths !== this.state.statesDeaths) {\n      this.props.loadStatesDeaths(this.state.statesDeaths);\n      this.props.loadStatesConfirmed(this.state.statesCases);\n    }\n    if (prevState.italyDeaths !== this.state.italyDeaths) {\n      this.props.loadItalyDeaths(this.state.italyDeaths);\n      this.props.loadItalyConfirmed(this.state.italyCases);\n    }\n  }\n\n  fetchData = (countryCode, stateDeathsName, stateCasesName) => {\n    axios\n      .get(`https://covid19.mathdro.id/api/${countryCode}`)\n      .then(response =>\n        this.setState({\n          [stateDeathsName]: response.data.deaths.value,\n          [stateCasesName]: response.data.confirmed.value\n        })\n      )\n      .catch(error => console.log(\"error: \" + error));\n  };\n\n  render() {\n    return (\n      <>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            margin: \"20px 20px\"\n          }}\n        >\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"h2\">\n            COVID-19 INFO\n          </Typography>\n        </div>\n        <div\n          className=\"cards-list\"\n          style={{\n            width: \"100%\",\n            height: \"50%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom:\"100px\"\n          }}\n        >\n          <Italy />\n          <Poland />\n          <GB />\n          <States />\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            height:\"20%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            margin: \"20px 20px\"\n          }}\n        >\n          <Typography align=\"center\" spacing=\"5\" color=\"textPrimary\" variant=\"h4\">\n            Coronavirus Cases: {this.state.globalCases}\n          </Typography>\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"h4\">\n            Deaths: {this.state.globalDeaths}\n          </Typography>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.deathsReducer.deaths\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadDeaths: data => {\n      dispatch(loadDeaths(data));\n    },\n    loadConfirmed: data => {\n      dispatch(loadConfirmed(data));\n    },\n    loadBritainDeaths: data => {\n      dispatch(loadBritainDeaths(data));\n    },\n    loadBritainConfirmed: data => {\n      dispatch(loadBritainConfirmed(data));\n    },\n    loadGlobalDeaths: data => {\n      dispatch(loadGlobalDeaths(data));\n    },\n    loadGlobalConfirmed: data => {\n      dispatch(loadGlobalConfirmed(data));\n    },\n    loadStatesDeaths: data => {\n      dispatch(loadStatesDeaths(data));\n    },\n    loadStatesConfirmed: data => {\n      dispatch(loadStatesConfirmed(data));\n    },\n    loadItalyDeaths: data => {\n      dispatch(loadItalyDeaths(data));\n    },\n    loadItalyConfirmed: data => {\n      dispatch(loadItalyConfirmed(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats);\n","export const loadDeaths = (data) => {\n    return {\n        type: \"DEATHS\",\n        payload: data\n    }\n}\n\nexport const loadBritainDeaths = (data) => {\n    return {\n        type: \"DEATHS_BRITAIN\",\n        payload: data\n    }\n}\n\nexport const loadGlobalDeaths = (data) => {\n    return {\n        type: \"DEATHS_GLOBAL\",\n        payload: data\n    }\n}\n\nexport const loadStatesDeaths = (data) => {\n    return {\n        type: \"DEATHS_STATES\",\n        payload: data\n    }\n}\n\nexport const loadItalyDeaths = (data) => {\n    return {\n        type: \"DEATHS_ITALY\",\n        payload: data\n    }\n}\n\nexport const loadConfirmed = (data) => {\n    return {\n        type: \"CONFIRMED\",\n        payload: data\n    }\n}\n\nexport const loadBritainConfirmed = (data) => {\n    return {\n        type: \"CONFIRMED_BRITAIN\",\n        payload: data\n    }\n}\n\nexport const loadGlobalConfirmed = (data) => {\n    return {\n        type: \"CONFIRMED_GLOBAL\",\n        payload: data\n    }\n}\nexport const loadStatesConfirmed = (data) => {\n    return {\n        type: \"CONFIRMED_STATES\",\n        payload: data\n    }\n}\n\nexport const loadItalyConfirmed = (data) => {\n    return {\n        type: \"CONFIRMED_ITALY\",\n        payload: data\n    }\n}","import React from 'react';\nimport Stats from './Components/Stats';\nimport './App.css';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <Stats/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n\n    deaths:0,\n    britain:0,\n    usa:0,\n    italy:0,\n    global:0,\n    states:0,\n    italy:0\n \n }\n \n const deathsReducer = (state = initState, action) => {\n \n    if (action.type === 'DEATHS') {\n        return {\n            ...state,\n            deaths: action.payload,\n        }\n    }\n    \n    if (action.type === 'DEATHS_BRITAIN'){\n        return {\n            ...state,\n            britain: action.payload,\n        }\n    }\n\n    if (action.type === 'DEATHS_GLOBAL') {\n        return {\n            ...state,\n            global: action.payload,\n        }\n    }\n\n    if (action.type === 'DEATHS_STATES') {\n        return {\n            ...state,\n            states: action.payload,\n        }\n    }\n\n    if (action.type === 'DEATHS_ITALY') {\n        return {\n            ...state,\n            italy: action.payload,\n        }\n    }\n    return state\n \n }\n \n export default deathsReducer;","const initState = {\n\n    confirmed:0,\n    britain:0,\n    usa:0,\n    italy:0,\n    global:0,\n    states:0,\n    italy:0\n \n }\n \n const confirmedReducer = (state = initState, action) => {\n \n    if (action.type === 'CONFIRMED') {\n        return {\n            ...state,\n            confirmed: action.payload,\n        }\n    }\n\n    if (action.type === 'CONFIRMED_BRITAIN'){\n        return {\n            ...state,\n            britain: action.payload,\n        }\n    }\n\n    if (action.type === 'CONFIRMED_GLOBAL'){\n        return {\n            ...state,\n            global: action.payload,\n        }\n    }\n\n    if (action.type === 'CONFIRMED_STATES'){\n        return {\n            ...state,\n            states: action.payload,\n        }\n    }\n\n    if (action.type === 'CONFIRMED_ITALY'){\n        return {\n            ...state,\n            italy: action.payload,\n        }\n    }\n    return state\n \n }\n \n export default confirmedReducer;","import { combineReducers } from 'redux';\nimport deathsReducer from './deathsReducer';\nimport confirmedReducer from './confirmedReducer';\n\n\nconst reducers = combineReducers({deathsReducer, confirmedReducer})\n\nexport default reducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from \"./Components/Reducers\";\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}